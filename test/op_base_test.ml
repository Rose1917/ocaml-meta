include Op.Op_base

(* let%test "test_rev" = *) 
(*   let i = sequential [|2;3|] in *)
(*   print i; *)
(*   let o = sub_transpose i in *)
(*   print o; *)
(*   let r = rev i in *)
(*   print r; *)
(*   false *)

(* let%test "test_insert_zero" = *) 
(*   let i = sequential [|3;3|] in *)
(*   print i; *)
(*   let o = insert_zero i 3 in *)
(*   print o; *)
(*   false *)


(* let%test "test_merge" = *) 
(*   let x = sequential [|3|] in *)
(*   let y = sequential [|3|] in *)
(*   let z = sequential [|3|] in *)
(*   print x ~prefix:"x"; *)
(*   print y ~prefix:"y"; *)
(*   print z ~prefix:"z"; *)
(*   let o = merge [|x;y;z|] in *)
(*   print o ~prefix:"z"; *)
(*   false *)

(* let%test "test_split" = *) 
(*   let x = sequential [|5;5|] in *)
(*   print x ~prefix:"x"; *)
(*   let o = split x in *)
(*   for i = 0 to 5 - 1 do *)
(*     print o.(i); *)
(*   done; *)
(*   false *)

(* let%test "test_max_pool3d" = *) 
(*   let x = sequential [|2;14;14|] in *)
(*   print x ~prefix:"x"; *)
(*   let o = max_pool3d x [|2;2|] ~stride:2 in *)
(*   print o; *)
(*   false *)

(* let%test "layer_conv3d_boost" = *) 
(*   let input = sequential [|3;4;4|] in *)
(*   print input ~prefix:"input"; *)
(*   let filter = ones [|3;3;2;2|] in *)
(*   print filter ~prefix:"filter"; *)
(*   let o = layer_conv3d_boost input filter 2 in *)
(*   print o; *)
(*   false *)

(* let%test "layer_conv3d" = *) 
(*   for _ = 0 to 100 - 1 do *)
(*     let input = random [|3;4;4|] in *)
(*     print input ~prefix:"input"; *)
(*     let filter = ones [|3;3;2;2|] in *)
(*     print filter ~prefix:"filter"; *)
(*     let o = layer_conv3d input filter ~stride:2 in *)
(*     print o; *)
(*   done; *)
(*   false *)

(* let%test "test_avg_pool3d" = *) 
(*   let x = sequential [|2;8;8|] in *)
(*   print x ~prefix:"x"; *)
(*   let o = avg_pool3d x [|2;2|] ~stride:2 in *)
(*   print o; *)
(*   false *)
